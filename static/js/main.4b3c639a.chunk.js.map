{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodo","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAyCeA,MAvCf,SAAkBC,GAAQ,IAAD,EACKC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAD9C,mBACdC,EADc,KACPC,EADO,KAGfC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAGrB,IAWMC,EAAe,SAACC,GAClBP,EAASO,EAAEC,OAAOV,QAGtB,OACI,sBAAMW,UAAU,YAAYC,SAhBX,SAACH,GAClBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAQT,SACKL,EAAME,KACP,qCAAE,uBAAOoB,KAAK,OAAOC,YAAY,iFAAgBpB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,kBACrFW,SAAUd,EAAce,IAAKpB,IAC7B,wBAAQQ,UAAU,mBAAlB,iEACK,qCAAE,uBAAOQ,KAAK,OAAOC,YAAY,sEAAepB,MAAOC,EAAOoB,KAAK,OAAOV,UAAU,aACzFW,SAAUd,EAAce,IAAKpB,IAC7B,wBAAQQ,UAAU,cAAlB,oE,eCEGa,MA/Bf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACnC9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAHgD,mBACpDD,EADoD,KAC9C8B,EAD8C,KAc3D,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAACZ,GAClB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,qBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,SACI,sBAAKtB,UAAU,gBAAf,UACI,uBAAOA,UAAW,iBAAgCuB,QAAS,kBAAMR,EAAaK,EAAKjB,KAAKK,KAAK,OAAOnB,MAAO+B,EAAKb,MAAvEa,EAAKjB,IAE9C,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CAAyBuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAAKH,UAAU,gBACvE,cAAC,IAAD,CAAQuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAASP,UAAU,qBANhBqB,OC4BlEG,MAhDf,WAAqB,IAAD,EACMrC,mBAAS,IADf,mBACb2B,EADa,KACNW,EADM,KAuChB,OACI,sBAAKzB,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,kFACA,cAAC,EAAD,CAAUC,SAvCN,SAACmB,GAAU,IAAD,EACtB,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,IACT,EAAAC,SAAQC,IAAR,oBAAef,QAgCP,cAAC,EAAD,CAAMA,MAAOA,EAAOC,aAdX,SAACZ,GAClB,IAAI2B,EAAchB,EAAMK,KAAI,SAAAC,GAIxB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASK,IAO+Cd,WArBzC,SAACb,GAChB,IAAM4B,EAAY,YAAIjB,GAAOkB,QAAO,SAAAZ,GAAI,OAAIA,EAAKjB,KAAOA,KAExDsB,EAASM,IAkBuEd,WA7BjE,SAACgB,EAAQC,GACpBA,EAAS3B,OAAQ,QAAQmB,KAAKQ,EAAS3B,OAI3CkB,GAAS,SAAAU,GAAI,OAAIA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKjC,KAAO8B,EAASC,EAAWE,eCDxDC,MAlBf,WACE,OACE,oCACE,qBAAKrC,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACb,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,cAAC,EAAD,W,MCXVsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b3c639a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('');\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n            <><input type=\"text\" placeholder=\"Редактировать\" value={input} name=\"text\" className=\"todo-input edit\"\r\n            onChange={handleChange} ref={inputRef} />\r\n            <button className=\"todo-button edit\">Обновить</button></>) :\r\n                (<><input type=\"text\" placeholder=\"Новая задача\" value={input} name=\"text\" className=\"todo-input\"\r\n            onChange={handleChange} ref={inputRef} />\r\n            <button className=\"todo-button\">Добавить</button></>)\r\n            }\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\r\nimport { MdEdit } from 'react-icons/md';\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n    })\r\n\r\n    const submitUpdate = (value) => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: '',\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n            <div className=\"todo-row-ping\">\r\n                <input className={'todo-row-input'} key={todo.id} onClick={() => completeTodo(todo.id)} type=\"text\" value={todo.text} />\r\n\r\n                <div className=\"icons\">\r\n                    <IoIosCloseCircleOutline onClick={() => removeTodo(todo.id)} className=\"delete-icon\" />\r\n                    <MdEdit onClick={() => setEdit({ id: todo.id, value: todo.text })} className=\"edit-icon\" />\r\n                </div></div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\nconst [todos, setTodos] = useState([]);\r\n\r\nconst addTodo = (todo) => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return\r\n    }\r\n\r\n    const newTodos = [todo, ...todos]\r\n\r\n    setTodos(newTodos);\r\n    console.log(...todos)\r\n}\r\n\r\nconst updateTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n        return\r\n    }\r\n\r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n}\r\n \r\nconst removeTodo = (id) => {\r\n    const removeArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removeArr);\r\n}\r\n\r\n\r\nconst completeTodo = (id) => {\r\n    let updatedTodo = todos.map(todo => {\r\n        if (todo.id === id) {\r\n            todo.isComplete = !todo.isComplete;\r\n        }\r\n        return todo;\r\n    });\r\n    setTodos(updatedTodo);\r\n}\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <h1 className=\"form__title\">Список задач:</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react';\nimport './App.scss';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <section>\n      <div className=\"color\"></div>\n      <div className=\"color\"></div>\n      <div className=\"color\"></div>\n        <div className=\"container\">\n          <div className=\"square\"></div>\n          <div className=\"square\"></div>\n          <div className=\"square\"></div>\n          <div className=\"square\"></div>\n          <div className=\"square\"></div>\n          <TodoList />\n        </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}